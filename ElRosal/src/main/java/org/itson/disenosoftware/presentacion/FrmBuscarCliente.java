package org.itson.disenosoftware.presentacion;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.itson.disenosoftware.navegacion.INavegacion;
import org.itson.disenosoftware.navegacion.Navegacion;
import org.itson.disenosoftware.negocio.avisos.Avisos;
import org.itson.disenosoftware.negocio.dtos.ClienteNuevoDTO;

/**
 *
 * @author José Karim Franco Valencia - 245138
 * @author Kimberli Joana Martinez Sandoval - 244802
 * @author Víctor Humberto Encinas Guzmán - 244821
 * @author José Ángel Huerta Amparán - 245345
 * @author Alexa Maria Picos Valenzuela - 244893
 */
public class FrmBuscarCliente extends javax.swing.JFrame {

    INavegacion navegacion;
    ClienteNuevoDTO clienteDTO;
    List<ClienteNuevoDTO> clientes;
    private DefaultTableModel modeloTabla;
    
    /** Creates new form FrmOpcionesCliente */
    public FrmBuscarCliente() {
        navegacion = new Navegacion();
        clienteDTO= new ClienteNuevoDTO();
        initComponents();
        anadirOpcionesCbx();
        limpiarTabla();
        clientesEjemplo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEncabezado = new javax.swing.JPanel();
        lblEncabezado = new javax.swing.JLabel();
        logoRosa1 = new javax.swing.JLabel();
        logoRosa2 = new javax.swing.JLabel();
        panelOpciones = new javax.swing.JPanel();
        lblTituloSeccion = new javax.swing.JLabel();
        cbxTipo = new javax.swing.JComboBox<>();
        txtCoincidencia = new javax.swing.JTextField();
        lblOpciones = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        lblOpciones1 = new javax.swing.JLabel();
        lblOpciones2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelEncabezado.setBackground(new java.awt.Color(64, 53, 44));
        panelEncabezado.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEncabezado.setFont(new java.awt.Font("Cambria Math", 1, 48)); // NOI18N
        lblEncabezado.setForeground(new java.awt.Color(242, 224, 201));
        lblEncabezado.setText("EL ROSAL");
        panelEncabezado.add(lblEncabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 30, -1, -1));

        logoRosa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconRosa.png"))); // NOI18N
        panelEncabezado.add(logoRosa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, 64, 64));

        logoRosa2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconRosa.png"))); // NOI18N
        panelEncabezado.add(logoRosa2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 64, 64));

        getContentPane().add(panelEncabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 100));

        panelOpciones.setBackground(new java.awt.Color(242, 224, 201));
        panelOpciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTituloSeccion.setFont(new java.awt.Font("Amazon Ember", 1, 48)); // NOI18N
        lblTituloSeccion.setForeground(new java.awt.Color(64, 53, 44));
        lblTituloSeccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloSeccion.setText("Busqueda cliente por");
        panelOpciones.add(lblTituloSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 800, -1));

        cbxTipo.setBackground(new java.awt.Color(242, 224, 201));
        cbxTipo.setFont(new java.awt.Font("Amazon Ember Light", 0, 18)); // NOI18N
        cbxTipo.setForeground(new java.awt.Color(157, 134, 90));
        cbxTipo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 53, 44), 2));
        cbxTipo.setFocusable(false);
        cbxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoActionPerformed(evt);
            }
        });
        panelOpciones.add(cbxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 230, 40));

        txtCoincidencia.setBackground(new java.awt.Color(242, 224, 201));
        txtCoincidencia.setFont(new java.awt.Font("Amazon Ember Light", 0, 20)); // NOI18N
        txtCoincidencia.setForeground(new java.awt.Color(34, 33, 33));
        txtCoincidencia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 53, 44), 2));
        txtCoincidencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCoincidenciaKeyPressed(evt);
            }
        });
        panelOpciones.add(txtCoincidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 550, 40));

        lblOpciones.setFont(new java.awt.Font("Amazon Ember", 0, 24)); // NOI18N
        lblOpciones.setForeground(new java.awt.Color(64, 53, 44));
        lblOpciones.setText("Coincidencia:");
        panelOpciones.add(lblOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        btnCancelar.setBackground(new java.awt.Color(64, 53, 44));
        btnCancelar.setFont(new java.awt.Font("Amazon Ember", 0, 24)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(242, 224, 201));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorderPainted(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setFocusable(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panelOpciones.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 160, 50));

        btnSeleccionar.setBackground(new java.awt.Color(64, 53, 44));
        btnSeleccionar.setFont(new java.awt.Font("Amazon Ember", 0, 24)); // NOI18N
        btnSeleccionar.setForeground(new java.awt.Color(242, 224, 201));
        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.setBorderPainted(false);
        btnSeleccionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSeleccionar.setFocusable(false);
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });
        panelOpciones.add(btnSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, 160, 50));

        lblOpciones1.setFont(new java.awt.Font("Amazon Ember", 0, 36)); // NOI18N
        lblOpciones1.setForeground(new java.awt.Color(64, 53, 44));
        lblOpciones1.setText("Opciones");
        panelOpciones.add(lblOpciones1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, -1));

        lblOpciones2.setFont(new java.awt.Font("Amazon Ember", 0, 24)); // NOI18N
        lblOpciones2.setForeground(new java.awt.Color(64, 53, 44));
        lblOpciones2.setText("Tipo:");
        panelOpciones.add(lblOpciones2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        jClientes.setBackground(new java.awt.Color(217, 195, 176));
        jClientes.setFont(new java.awt.Font("Amazon Ember", 0, 12)); // NOI18N
        jClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombres", "Apellidos", "Correo", "Teléfono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jClientes);
        if (jClientes.getColumnModel().getColumnCount() > 0) {
            jClientes.getColumnModel().getColumn(3).setPreferredWidth(0);
        }

        panelOpciones.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 810, 170));

        getContentPane().add(panelOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1000, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoActionPerformed

    }//GEN-LAST:event_cbxTipoActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
       int filaSeleccionada = jClientes.getSelectedRow();

        if (filaSeleccionada != -1) { // Verificar si se ha seleccionado alguna fila
            Object[] datosFila = new Object[jClientes.getColumnCount()];

            for (int i = 0; i < jClientes.getColumnCount(); i++) {
                datosFila[i] = jClientes.getValueAt(filaSeleccionada, i);
            }

            // Suponiendo que clienteDTO es una instancia de tu clase ClienteDTO
            clienteDTO.setNombres(datosFila[0].toString()); // Suponiendo que la columna 0 es para nombres
            clienteDTO.setApellidos(datosFila[1].toString()); // Suponiendo que la columna 1 es para apellidos
            clienteDTO.setCorreo(datosFila[2].toString()); // Suponiendo que la columna 2 es para correo
            clienteDTO.setTelefono(datosFila[3].toString()); // Suponiendo que la columna 3 es para teléfono

            navegacion.cambiarFrmTipoOrden(this, clienteDTO);
//            // Aquí podrías hacer cualquier otra operación con el objeto clienteDTO, como imprimirlo o usarlo de otra manera
//            System.out.println(clienteDTO);
        } else {
            // Si no se ha seleccionado ninguna fila, muestra un mensaje de advertencia o realiza alguna otra acción
            new Avisos().mostrarAviso(this, "Seleccione un cliente primero");
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        navegacion.cambiarFrmOpcionesCliente(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCoincidenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCoincidenciaKeyPressed
        buscarCoincidencias(txtCoincidencia.getText()+evt.getKeyChar());
    }//GEN-LAST:event_txtCoincidenciaKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox<String> cbxTipo;
    private javax.swing.JTable jClientes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEncabezado;
    private javax.swing.JLabel lblOpciones;
    private javax.swing.JLabel lblOpciones1;
    private javax.swing.JLabel lblOpciones2;
    private javax.swing.JLabel lblTituloSeccion;
    private javax.swing.JLabel logoRosa1;
    private javax.swing.JLabel logoRosa2;
    private javax.swing.JPanel panelEncabezado;
    private javax.swing.JPanel panelOpciones;
    private javax.swing.JTextField txtCoincidencia;
    // End of variables declaration//GEN-END:variables

    private void anadirOpcionesCbx() {
        cbxTipo.addItem("Nombre");
        cbxTipo.addItem("Apellidos");
        cbxTipo.addItem("Correo");
        cbxTipo.addItem("Teléfono");
    }

    
    private void clientesEjemplo(){
        clientes = new ArrayList<>();
        clientes.add(new ClienteNuevoDTO("Jose Karim","Franco Valencia","luismilover@gmail.com","6444562780"));
        clientes.add(new ClienteNuevoDTO("John Julian","Lennon Harrison","imaginelover@gmail.com","6444242780"));
        clientes.add(new ClienteNuevoDTO("Ana Laura","Arredondo Suarez","catlover@gmail.com","6444569080"));
        clientes.add(new ClienteNuevoDTO("Jurgen Cosmo","Don Dimadon","duenodimdale@gmail.com","789788780"));
        clientes.add(new ClienteNuevoDTO("Jorge Antonio","Estrada Garces","beatles@gmail.com","678989890"));
        clientes.add(new ClienteNuevoDTO("Carlos","Guzman Cordova","toxico@gmail.com","6788888190"));
        clientes.add(new ClienteNuevoDTO("Kike Wacho","Alamos Flores","ulsa@gmail.com","6441236854"));
    }

    private void buscarCoincidencias(String texto) {
        limpiarTabla();
        
        if(cbxTipo.getSelectedIndex() == 0){
            for (ClienteNuevoDTO cliente : clientes) {
                if(cliente.getNombres().contains(texto)){
                    insertarFila(cliente);
                }
            }
        }else if(cbxTipo.getSelectedIndex() == 1){
            for (ClienteNuevoDTO cliente : clientes) {
                    if(cliente.getApellidos().contains(texto)){
                        insertarFila(cliente);
                    }
            }
        }else if(cbxTipo.getSelectedIndex() == 2){
            for (ClienteNuevoDTO cliente : clientes) {
                    if(cliente.getCorreo().contains(texto)){
                        insertarFila(cliente);
                    }
            }
        }else{
            for (ClienteNuevoDTO cliente : clientes) {
                    if(cliente.getTelefono().contains(texto)){
                        insertarFila(cliente);
                    }
            }
        }
         
    }
    
    /**
     * Método que limpia la tabla de transacciones.
     */
    private void limpiarTabla(){
         modeloTabla = (DefaultTableModel) jClientes.getModel();
            if (modeloTabla.getRowCount() > 0) {
                for (int i = modeloTabla.getRowCount() - 1; i > -1; i--) {
                    modeloTabla.removeRow(i);
                }
            }
    }
    
   
    
    private void insertarFila(ClienteNuevoDTO cliente){
        Object[] fila = {
                                cliente.getNombres(),
                                cliente.getApellidos(),
                                cliente.getCorreo(),
                                cliente.getTelefono()
                            };
                            modeloTabla.addRow(fila);
    }
}
